notifications:
  email: false
dist: xenial
os: linux
language: python
python: 3.8-dev
cache: pip
env:
  global:
    - GH_REPO=Drakkar-Software/OctoBot-Evaluators
    - DEPLOY_BRANCH=master
    - PACKAGE_FOLDER=octobot_evaluators

install:
  - python3 -m pip install --prefer-binary -r dev_requirements.txt -r requirements.txt

jobs:
  include:
    - name: "Linux - Python 3.8-dev - Python sources"
      stage: test
      os: linux
      python: 3.8-dev
      language: python
      script:
        - pytest --cov=. --cov-config=.coveragerc --durations=0 -rw tests
      after_success:
        - if [ $TRAVIS_PULL_REQUEST == "false" ]; then coveralls; fi

    - name: "Linux - Python 3.8-dev - Installed"
      stage: test
      os: linux
      python: 3.8-dev
      language: python
      script:
        - python3 setup.py install
        - rm -rf $PACKAGE_FOLDER
        - pytest tests

    - name: "Linux - Python 3 - Deploy"
      stage: deploy
      script:
        - ls
      deploy:
        - provider: pypi
          username: __token__
          password:
            secure: FAYFAw/yxVHQH7qJ7m6CoueReiw8tF+BmWzlSO7vxnvtE8ptsLUjBG60VfDB4GSJFu2FKSnjayu+hWHNUSBI9VbCAJi8LlX0jIOjMXd2HxbDhXjSgNm6dQbIVFB6L89zBor66s6g3nQX7uuS1jJE6cgY/u/sHGctZU+TguJDdDDJj0JcWIh2FUoW7jhMplXErLtDLHNtyyG5AEsBAWuDcKZV0RNX8Bu2gerG4d6oszW6rhnVXYo3aAVScJ3K3XIloWuazmLYaxnOFCfHLRBBearusFZpxfqIQ/SV8m2IAM0wqzIufdC2UdgpGHU8N1oQ6L/Kq6VLKE35GqgJWLKOQDHnlbStYFvFs7eFpMgJXlhUrQGzH33kkCERrBqvYYDpFFyzyQVFyuFfR+7/jiLT/AEAUAYM8mIK4uJ9LpXPFKBce15ADMGrRo20azPGaZyG+X+da3hhDt2UpJ/01PYB4DKRwtkrE6Qwk27mRS4xVg8VEAeZwUve9zh246fL80ObzyAVEK8Hl8yjDf8+DRNoWGSpOTDTuVTEBvfNLic4cVslzXnfsgKdIPQeDq2l0vV5ajyJAAr87VnYq35KXEUwwmhfzxM4tcFC84uhvbkj0T0tWJUkBX1hduBaOplw+iaKnBIdiqvG4RG4hnk4WmnIZ3On4K+Ln4iJA2ZgNVS6GT0=
          cleanup: true
          skip_existing: true
          distributions: "sdist"
          on:
            repo: $GH_REPO
            branch: $DEPLOY_BRANCH
            tags: true
            condition: $TRAVIS_OS_NAME = 'linux'
        - provider: script
          script: docker run -it -e PYPI_USERNAME=$PYPI_USERNAME -e PYPI_PASSWORD=$PYPI_PASSWORD -v $(pwd):/project drakkarsoftware/octobot-pypi-deploy:i686 "i686" "cp37-cp37m" "cp37"
          cleanup: true
          skip_existing: true
          on:
            repo: "$GH_REPO"
            branch: "$DEPLOY_BRANCH"
            tags: true
            condition: "$TRAVIS_OS_NAME = 'linux'"
        - provider: script
          script: docker run -it -e PYPI_USERNAME=$PYPI_USERNAME -e PYPI_PASSWORD=$PYPI_PASSWORD -v $(pwd):/project drakkarsoftware/octobot-pypi-deploy:x86_64 "x86_64" "cp37-cp37m" "cp37"
          cleanup: true
          on:
            repo: "$GH_REPO"
            branch: "$DEPLOY_BRANCH"
            tags: true
            condition: "$TRAVIS_OS_NAME = 'linux'"

    - name: "OSX - Python 3.7 - Deploy"
      stage: deploy
      os: osx
      osx_image: xcode11    # Python 3.7.2 running on macOS 10.14.3
      language: shell       # 'language: python' is an error on Travis CI macOS
      # python: 3.7         # 'python:' is ignored on Travis CI macOS
      before_install: python3 --version ; pip3 --version ; sw_vers
      install:
        - python3 -m pip install --prefer-binary --user -r requirements.txt
        - python3 -m pip install --prefer-binary -r dev_requirements.txt
      before_cache:
        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
      cache:
        directories:
          - "$HOME/Library/Caches/pip"
      script:
        - python3 setup.py build_ext --inplace
        - pytest tests
      deploy:
        - provider: script
          script: python3 setup.py bdist_wheel && python3 -m twine upload dist/* -u $PYPI_USERNAME -p $PYPI_PASSWORD --skip-existing
          cleanup: true
          on:
            repo: "$GH_REPO"
            branch: "$DEPLOY_BRANCH"
            tags: true
            condition: "$TRAVIS_OS_NAME = 'osx'"

after_failure:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh failure https://discordapp.com/api/webhooks/$WEBHOOK_TOKEN
